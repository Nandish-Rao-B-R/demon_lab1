Write a program to create a service that will put a notification on the screen every 5 seconds


activity-main.xml

LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:gravity="center" >
    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Start Notification"
        android:layout_gravity="center"
        android:id="@+id/btn_start"/>

    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Stop Notification"
        android:layout_gravity="center"
        android:id="@+id/btn_stop"/>

</LinearLayout>



MainActivity.java


package com.example.notify;
import android.os.Bundle;
import android.app.Activity;
import android.content.Intent;
import android.view.Menu;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.Toast;

public class MainActivity extends Activity implements OnClickListener{ Button btnstart,btnstop;
    @Override
    protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main);
        btnstart=(Button)findViewById(R.id.btn_start); btnstart.setOnClickListener(this);


        btnstop=(Button)findViewById(R.id.btn_stop); btnstop.setOnClickListener(this);
    }
    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
// Inflate the menu; this adds items to the action bar if it is present. getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }
    @Override
    public void onClick(View v) {
// TODO Auto-generated method stub

        if(v.equals(btnstart))
        {
            Intent it=new Intent(this,ServiceClass.class); Bundle b=new Bundle(); b.putBoolean("stop", true); it.putExtra("data", b);
            startService(it);
        }

        else
        {

            Intent it=new Intent(this,ServiceClass.class);
            stopService(it);


        }
    }

}




ServiceClass.java


package com.example.notify;

import android.app.NotificationChannel;
import android.app.NotificationManager;
import android.app.Service;
import android.content.Intent;
import android.graphics.Color;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.os.Message;
import android.widget.Toast;

import androidx.core.app.NotificationCompat;

public class ServiceClass extends Service{

    boolean running=false;
    MyThread thread;

    public static final String NOTIFICATION_CHANNEL_ID = "10001" ;
    public static final int NOTIFICATION_ID = 1 ;
    private final static String default_notification_channel_id = "default" ;


    public void onCreate()
    {
        super.onCreate();
        Toast.makeText(getBaseContext(), "Service Created", Toast.LENGTH_LONG).show();
        running=true; thread=new MyThread(); thread.start();
    }

    public int onStartCommand(Intent intent, int flags,int startId)
    {
        super.onStartCommand(intent, flags, startId);
        Toast.makeText(getBaseContext(), "Service started", Toast.LENGTH_LONG).show();
        Bundle b=intent.getBundleExtra("data"); running=b.getBoolean("stop");

        if(!thread.isAlive())
        {
            thread=new MyThread(); thread.start();
        }






        return Service.START_NOT_STICKY;
    }

    @Override
    public IBinder onBind(Intent arg0) {

        return null;

    }

    public void onDestroy()
    {
        running=false;
        Toast.makeText(getBaseContext(), "Service stopped", Toast.LENGTH_LONG).show();
        super.onDestroy();
    }

    Handler hand=new Handler()
    {
        public void handleMessage(Message m)
        {
            NotificationManager manager=(NotificationManager)getSystemService(NOTIFICATION_SERVICE);


            NotificationCompat.Builder mBuilder = new NotificationCompat.Builder(getBaseContext(),
                    default_notification_channel_id )
                    .setSmallIcon(R.drawable. ic_launcher_foreground )
                    .setContentTitle( "From Service" )
                    .setContentText( "Hai " +m.what );


            if (android.os.Build.VERSION. SDK_INT >= android.os.Build.VERSION_CODES. O ) {

                int importance = NotificationManager. IMPORTANCE_HIGH ;
                NotificationChannel notificationChannel = new
                        NotificationChannel( NOTIFICATION_CHANNEL_ID , "NOTIFICATION_CHANNEL_NAME" , importance) ;
                notificationChannel.enableLights( true ) ;
                notificationChannel.setLightColor(Color. RED ) ;
                notificationChannel.enableVibration( true ) ;
                notificationChannel.setVibrationPattern( new long []{ 100 , 200 , 300 , 400 , 500 , 400 , 300 , 200 , 400 }) ;
                mBuilder.setChannelId( NOTIFICATION_CHANNEL_ID ) ;
                assert manager != null;
                manager.createNotificationChannel(notificationChannel) ;
            }
            assert manager != null;
            manager.notify(NOTIFICATION_ID, mBuilder.build()) ;

        }

    };
    class MyThread extends Thread
    {
        public void run()
        {
            int i=0; while(running)
        {

            try {
                Thread.sleep(5000);
            } catch (InterruptedException e) {
// TODO Auto-generated catch block e.printStackTrace();
            }

            hand.sendEmptyMessage(i++);
        }
        }
    }
}


AndroidManifest.java

<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">

    <application
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.Notify"
        tools:targetApi="31">
        <activity
            android:name=".MainActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>

            <meta-data
                android:name="android.app.lib_name"
                android:value="" />
        </activity>

        <service android:name="ServiceClass"></service>
   
 </application>


</manifest>